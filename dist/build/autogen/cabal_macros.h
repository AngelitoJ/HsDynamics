/* DO NOT EDIT: This file is automatically generated by Cabal */

/* package Cabal-1.16.0.3 */
#define VERSION_Cabal "1.16.0.3"
#define MIN_VERSION_Cabal(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  16 || \
  (major1) == 1 && (major2) == 16 && (minor) <= 0)

/* package EitherT-0.2.0 */
#define VERSION_EitherT "0.2.0"
#define MIN_VERSION_EitherT(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 0)

/* package ParsecTools-0.0.2.0 */
#define VERSION_ParsecTools "0.0.2.0"
#define MIN_VERSION_ParsecTools(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  0 || \
  (major1) == 0 && (major2) == 0 && (minor) <= 2)

/* package async-2.0.1.3 */
#define VERSION_async "2.0.1.3"
#define MIN_VERSION_async(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  0 || \
  (major1) == 2 && (major2) == 0 && (minor) <= 1)

/* package base-4.5.1.0 */
#define VERSION_base "4.5.1.0"
#define MIN_VERSION_base(major1,major2,minor) (\
  (major1) <  4 || \
  (major1) == 4 && (major2) <  5 || \
  (major1) == 4 && (major2) == 5 && (minor) <= 1)

/* package containers-0.4.2.1 */
#define VERSION_containers "0.4.2.1"
#define MIN_VERSION_containers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  4 || \
  (major1) == 0 && (major2) == 4 && (minor) <= 2)

/* package directory-1.1.0.2 */
#define VERSION_directory "1.1.0.2"
#define MIN_VERSION_directory(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package filepath-1.3.0.0 */
#define VERSION_filepath "1.3.0.0"
#define MIN_VERSION_filepath(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  3 || \
  (major1) == 1 && (major2) == 3 && (minor) <= 0)

/* package hmatrix-0.14.1.0 */
#define VERSION_hmatrix "0.14.1.0"
#define MIN_VERSION_hmatrix(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  14 || \
  (major1) == 0 && (major2) == 14 && (minor) <= 1)

/* package mtl-2.1.2 */
#define VERSION_mtl "2.1.2"
#define MIN_VERSION_mtl(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  1 || \
  (major1) == 2 && (major2) == 1 && (minor) <= 2)

/* package normaldistribution-1.1.0.3 */
#define VERSION_normaldistribution "1.1.0.3"
#define MIN_VERSION_normaldistribution(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package parsec-3.1.3 */
#define VERSION_parsec "3.1.3"
#define MIN_VERSION_parsec(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  1 || \
  (major1) == 3 && (major2) == 1 && (minor) <= 3)

/* package process-1.1.0.1 */
#define VERSION_process "1.1.0.1"
#define MIN_VERSION_process(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  1 || \
  (major1) == 1 && (major2) == 1 && (minor) <= 0)

/* package random-1.0.1.1 */
#define VERSION_random "1.0.1.1"
#define MIN_VERSION_random(major1,major2,minor) (\
  (major1) <  1 || \
  (major1) == 1 && (major2) <  0 || \
  (major1) == 1 && (major2) == 0 && (minor) <= 1)

/* package repa-3.2.2.201204.1 */
#define VERSION_repa "3.2.2.201204.1"
#define MIN_VERSION_repa(major1,major2,minor) (\
  (major1) <  3 || \
  (major1) == 3 && (major2) <  2 || \
  (major1) == 3 && (major2) == 2 && (minor) <= 2)

/* package split-0.2.2 */
#define VERSION_split "0.2.2"
#define MIN_VERSION_split(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  2 || \
  (major1) == 0 && (major2) == 2 && (minor) <= 2)

/* package strict-0.3.2 */
#define VERSION_strict "0.3.2"
#define MIN_VERSION_strict(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 2)

/* package transformers-0.3.0.0 */
#define VERSION_transformers "0.3.0.0"
#define MIN_VERSION_transformers(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  3 || \
  (major1) == 0 && (major2) == 3 && (minor) <= 0)

/* package unix-2.5.1.1 */
#define VERSION_unix "2.5.1.1"
#define MIN_VERSION_unix(major1,major2,minor) (\
  (major1) <  2 || \
  (major1) == 2 && (major2) <  5 || \
  (major1) == 2 && (major2) == 5 && (minor) <= 1)

/* package vector-0.10.0.1 */
#define VERSION_vector "0.10.0.1"
#define MIN_VERSION_vector(major1,major2,minor) (\
  (major1) <  0 || \
  (major1) == 0 && (major2) <  10 || \
  (major1) == 0 && (major2) == 10 && (minor) <= 0)

